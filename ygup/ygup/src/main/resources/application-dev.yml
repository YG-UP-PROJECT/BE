app:
  cors:
    allowed-origins: "http://localhost:3000,http://localhost:5173,http://localhost:8081"
    allowed-methods: "GET,POST,PUT,DELETE,OPTIONS"
    allowed-headers: "*"
    allow-credentials: true

  kakao:
    api:
      base-url: https://dapi.kakao.com
      key: ${KAKAO_REST_API_KEY:}   # ← 환경변수에서 읽기(없으면 빈값)
  google:
    api-key: ${GOOGLE_API_KEY:}     # 구글 Places API 키
gemini:
  api-key: ${GEMINI_API_KEY:}

management:
  endpoints:
    web:
      exposure:
        include: mappings,health
  endpoint:
    health:
      show-details: always   # health 세부정보도 보이게

spring:
  datasource:
    url: jdbc:mysql://localhost:3306/ygup?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=Asia/Seoul&characterEncoding=UTF-8
    username: YOUNSION
    password: younsi1314**
    driver-class-name: com.mysql.cj.jdbc.Driver

  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQL8Dialect

  security:
    user:
      name: admin         # 임시 계정
      password: admin123  # 임시 비밀번호

#app:
#  cors:
#    allowed-origins: "http://localhost:3000,http://localhost:5173,http://localhost:8081"
#    allowed-methods: "GET,POST,PUT,DELETE,OPTIONS"
#    allowed-headers: "*"
#    allow-credentials: true
#
#  kakao:
#    api:
#      base-url: https://dapi.kakao.com
#      key: ${KAKAO_REST_API_KEY:}   # ← 환경변수에서 읽기(없으면 빈값)
#  google:
#    api-key: ${GOOGLE_API_KEY:}     # 구글 Places API 키
#gemini:
#  api-key: ${GEMINI_API_KEY:}
#  #api-key: ${GEMINI_API_KEY:}       # Gemini API 키
#
#management:
#  endpoints:
#    web:
#      exposure:
#        include: mappings,health
#
##추가
#spring:
#  datasource:
#    url: jdbc:mysql://localhost:3306/ygup?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=Asia/Seoul&characterEncoding=UTF-8
#    username: YOUNSION
#    password: younsi1314**
#    driver-class-name: com.mysql.cj.jdbc.Driver
#
#  jpa:
#    hibernate:
#      ddl-auto: update   # 개발 환경에서는 update가 편함
#    show-sql: true
#    properties:
#      hibernate:
#        dialect: org.hibernate.dialect.MySQL8Dialect
